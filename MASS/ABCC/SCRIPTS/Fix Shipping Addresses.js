// Concat Address Line1, 2 and 3 into Address Line 1 value when Address field does not exist
vUpdateASITAddressLine1SQL = "UPDATE BAPPSPECTABLE_VALUE Z \
	SET Z.ATTRIBUTE_VALUE = ( \
	SELECT ATTRIBUTE_VALUE FROM ( \
	select \
	A.ATTRIBUTE_VALUE || \
	'\n' || ( \
	SELECT B.ATTRIBUTE_VALUE \
	FROM BAPPSPECTABLE_VALUE B \
	WHERE 1=1 \
	AND A.SERV_PROV_CODE = B.SERV_PROV_CODE \
	AND A.B1_PER_ID1 = B.B1_PER_ID1 \
	AND A.B1_PER_ID2 = B.B1_PER_ID2 \
	AND A.B1_PER_ID3 = B.B1_PER_ID3 \
	AND A.GROUP_NAME = B.GROUP_NAME \
	AND A.TABLE_NAME = B.TABLE_NAME \
	AND A.ROW_INDEX = B.ROW_INDEX \
	AND B.COLUMN_NAME = 'Address Line 2' \
	AND B.REC_STATUS = 'A' \
	) ||\
	'\n' || ( \
	SELECT C.ATTRIBUTE_VALUE \
	FROM BAPPSPECTABLE_VALUE C \
	WHERE 1=1 \
	AND A.SERV_PROV_CODE = C.SERV_PROV_CODE \
	AND A.B1_PER_ID1 = C.B1_PER_ID1 \
	AND A.B1_PER_ID2 = C.B1_PER_ID2 \
	AND A.B1_PER_ID3 = C.B1_PER_ID3 \
	AND A.GROUP_NAME = C.GROUP_NAME \
	AND A.TABLE_NAME = C.TABLE_NAME \
	AND A.ROW_INDEX = C.ROW_INDEX \
	AND C.COLUMN_NAME = 'Address Line 3' \
	AND C.REC_STATUS = 'A' \
	) as ATTRIBUTE_VALUE,		\
	A.B1_PER_ID1, \
	A.B1_PER_ID2, \
	A.B1_PER_ID3, \
	A.SERV_PROV_CODE, \
	A.TABLE_NAME, \
	A.GROUP_NAME, \
	A.ROW_INDEX \
	from BAPPSPECTABLE_VALUE A \
	where 1=1 \
	and A.SERV_PROV_CODE = 'ABCC' \
	AND A.GROUP_NAME = 'TR-COC' \
	and A.TABLE_NAME = 'SHIPPING ADDRESS' \
	and A.COLUMN_NAME = 'Address Line 1') X  \
	WHERE Z.SERV_PROV_CODE = X.SERV_PROV_CODE \
	AND Z.B1_PER_ID1 = X.B1_PER_ID1 \
	AND Z.B1_PER_ID2 = X.B1_PER_ID2 \
	AND Z.B1_PER_ID3 = X.B1_PER_ID3 \
	AND Z.GROUP_NAME = X.GROUP_NAME \
	AND Z.TABLE_NAME = X.TABLE_NAME \
	AND Z.ROW_INDEX = X.ROW_INDEX \
	) \
	WHERE 1=1 \
	AND Z.SERV_PROV_CODE = 'ABCC' \
	AND Z.GROUP_NAME = 'TR-COC' \
	AND Z.TABLE_NAME = 'SHIPPING ADDRESS' \
	AND Z.COLUMN_NAME = 'Address Line 1' \
	AND Z.REC_STATUS = 'A' \
	AND EXISTS (SELECT 1 FROM \
		(SELECT DISTINCT A.SERV_PROV_CODE, A.B1_PER_ID1, A.B1_PER_ID2, A.B1_PER_ID3, A.ROW_INDEX \
		FROM (\
			SELECT \
				BAPPSPECTABLE_VALUE.SERV_PROV_CODE, \
				BAPPSPECTABLE_VALUE.B1_PER_ID1, \
				BAPPSPECTABLE_VALUE.B1_PER_ID2, \
				BAPPSPECTABLE_VALUE.B1_PER_ID3, \
				BAPPSPECTABLE_VALUE.ROW_INDEX \
			FROM BAPPSPECTABLE_VALUE \
			WHERE 1=1 \
				AND BAPPSPECTABLE_VALUE.SERV_PROV_CODE = 'ABCC' \
				AND BAPPSPECTABLE_VALUE.GROUP_NAME = 'TR-COC' \
				AND BAPPSPECTABLE_VALUE.TABLE_NAME = 'SHIPPING ADDRESS' \
				AND BAPPSPECTABLE_VALUE.COLUMN_NAME = 'Address Line 1' \
				AND BAPPSPECTABLE_VALUE.REC_STATUS = 'A' \
			) A \
		) B \
		WHERE 1=1 \
			AND Z.SERV_PROV_CODE = B.SERV_PROV_CODE \
			AND Z.B1_PER_ID1 = B.B1_PER_ID1 \
			AND Z.B1_PER_ID2 = B.B1_PER_ID2 \
			AND Z.B1_PER_ID3 = B.B1_PER_ID3 \
			AND Z.ROW_INDEX = B.ROW_INDEX \
	)\
	AND NOT EXISTS (SELECT 1 FROM \
		(SELECT DISTINCT A.SERV_PROV_CODE, A.B1_PER_ID1, A.B1_PER_ID2, A.B1_PER_ID3, A.ROW_INDEX \
		FROM (\
			SELECT \
				BAPPSPECTABLE_VALUE.SERV_PROV_CODE, \
				BAPPSPECTABLE_VALUE.B1_PER_ID1, \
				BAPPSPECTABLE_VALUE.B1_PER_ID2, \
				BAPPSPECTABLE_VALUE.B1_PER_ID3, \
				BAPPSPECTABLE_VALUE.ROW_INDEX \
			FROM BAPPSPECTABLE_VALUE \
			WHERE 1=1 \
				AND BAPPSPECTABLE_VALUE.SERV_PROV_CODE = 'ABCC' \
				AND BAPPSPECTABLE_VALUE.GROUP_NAME = 'TR-COC' \
				AND BAPPSPECTABLE_VALUE.TABLE_NAME = 'SHIPPING ADDRESS' \
				AND BAPPSPECTABLE_VALUE.COLUMN_NAME = 'Address' \
				AND BAPPSPECTABLE_VALUE.REC_STATUS = 'A' \
			) A \
		) C \
		WHERE 1=1 \
			AND Z.SERV_PROV_CODE = C.SERV_PROV_CODE \
			AND Z.B1_PER_ID1 = C.B1_PER_ID1 \
			AND Z.B1_PER_ID2 = C.B1_PER_ID2 \
			AND Z.B1_PER_ID3 = C.B1_PER_ID3 \
			AND Z.ROW_INDEX = C.ROW_INDEX \
	) \
	";

// Update ASIT records for effected record SQL
// Concat Address Line1, 2 and 3 into Address value when Address field exists
vUpdateASITAddressSQL = "UPDATE BAPPSPECTABLE_VALUE Z \
	SET Z.ATTRIBUTE_VALUE = ( \
	SELECT ATTRIBUTE_VALUE FROM ( \
	select \
	A.ATTRIBUTE_VALUE || \
	'\n' || ( \
	SELECT B.ATTRIBUTE_VALUE \
	FROM BAPPSPECTABLE_VALUE B \
	WHERE 1=1 \
	AND A.SERV_PROV_CODE = B.SERV_PROV_CODE \
	AND A.B1_PER_ID1 = B.B1_PER_ID1 \
	AND A.B1_PER_ID2 = B.B1_PER_ID2 \
	AND A.B1_PER_ID3 = B.B1_PER_ID3 \
	AND A.GROUP_NAME = B.GROUP_NAME \
	AND A.TABLE_NAME = B.TABLE_NAME \
	AND A.ROW_INDEX = B.ROW_INDEX \
	AND B.COLUMN_NAME = 'Address Line 2' \
	AND B.REC_STATUS = 'A' \
	) ||\
	'\n' || ( \
	SELECT C.ATTRIBUTE_VALUE \
	FROM BAPPSPECTABLE_VALUE C \
	WHERE 1=1 \
	AND A.SERV_PROV_CODE = C.SERV_PROV_CODE \
	AND A.B1_PER_ID1 = C.B1_PER_ID1 \
	AND A.B1_PER_ID2 = C.B1_PER_ID2 \
	AND A.B1_PER_ID3 = C.B1_PER_ID3 \
	AND A.GROUP_NAME = C.GROUP_NAME \
	AND A.TABLE_NAME = C.TABLE_NAME \
	AND A.ROW_INDEX = C.ROW_INDEX \
	AND C.COLUMN_NAME = 'Address Line 3' \
	AND C.REC_STATUS = 'A' \
	) as ATTRIBUTE_VALUE,		\
	A.B1_PER_ID1, \
	A.B1_PER_ID2, \
	A.B1_PER_ID3, \
	A.SERV_PROV_CODE, \
	A.TABLE_NAME, \
	A.GROUP_NAME, \
	A.ROW_INDEX \
	from BAPPSPECTABLE_VALUE A \
	where 1=1 \
	and A.SERV_PROV_CODE = 'ABCC' \
	AND A.GROUP_NAME = 'TR-COC' \
	and A.TABLE_NAME = 'SHIPPING ADDRESS' \
	and A.COLUMN_NAME = 'Address Line 1') X  \
	WHERE Z.SERV_PROV_CODE = X.SERV_PROV_CODE \
	AND Z.B1_PER_ID1 = X.B1_PER_ID1 \
	AND Z.B1_PER_ID2 = X.B1_PER_ID2 \
	AND Z.B1_PER_ID3 = X.B1_PER_ID3 \
	AND Z.GROUP_NAME = X.GROUP_NAME \
	AND Z.TABLE_NAME = X.TABLE_NAME \
	AND Z.ROW_INDEX = X.ROW_INDEX \
	) \
	WHERE 1=1 \
	AND Z.SERV_PROV_CODE = 'ABCC' \
	AND Z.GROUP_NAME = 'TR-COC' \
	AND Z.TABLE_NAME = 'SHIPPING ADDRESS' \
	AND Z.COLUMN_NAME = 'Address' \
	AND Z.REC_STATUS = 'A' \
	AND EXISTS (SELECT 1 FROM \
		(SELECT DISTINCT A.SERV_PROV_CODE, A.B1_PER_ID1, A.B1_PER_ID2, A.B1_PER_ID3, A.ROW_INDEX \
		FROM (\
			SELECT \
				BAPPSPECTABLE_VALUE.SERV_PROV_CODE, \
				BAPPSPECTABLE_VALUE.B1_PER_ID1, \
				BAPPSPECTABLE_VALUE.B1_PER_ID2, \
				BAPPSPECTABLE_VALUE.B1_PER_ID3, \
				BAPPSPECTABLE_VALUE.ROW_INDEX \
			FROM BAPPSPECTABLE_VALUE \
			WHERE 1=1 \
				AND BAPPSPECTABLE_VALUE.SERV_PROV_CODE = 'ABCC' \
				AND BAPPSPECTABLE_VALUE.GROUP_NAME = 'TR-COC' \
				AND BAPPSPECTABLE_VALUE.TABLE_NAME = 'SHIPPING ADDRESS' \
				AND BAPPSPECTABLE_VALUE.COLUMN_NAME = 'Address Line 1' \
				AND BAPPSPECTABLE_VALUE.REC_STATUS = 'A' \
			) A \
		) B \
		WHERE 1=1 \
			AND Z.SERV_PROV_CODE = B.SERV_PROV_CODE \
			AND Z.B1_PER_ID1 = B.B1_PER_ID1 \
			AND Z.B1_PER_ID2 = B.B1_PER_ID2 \
			AND Z.B1_PER_ID3 = B.B1_PER_ID3 \
			AND Z.ROW_INDEX = B.ROW_INDEX \
	)\
	AND EXISTS (SELECT 1 FROM \
		(SELECT DISTINCT A.SERV_PROV_CODE, A.B1_PER_ID1, A.B1_PER_ID2, A.B1_PER_ID3, A.ROW_INDEX \
		FROM (\
			SELECT \
				BAPPSPECTABLE_VALUE.SERV_PROV_CODE, \
				BAPPSPECTABLE_VALUE.B1_PER_ID1, \
				BAPPSPECTABLE_VALUE.B1_PER_ID2, \
				BAPPSPECTABLE_VALUE.B1_PER_ID3, \
				BAPPSPECTABLE_VALUE.ROW_INDEX \
			FROM BAPPSPECTABLE_VALUE \
			WHERE 1=1 \
				AND BAPPSPECTABLE_VALUE.SERV_PROV_CODE = 'ABCC' \
				AND BAPPSPECTABLE_VALUE.GROUP_NAME = 'TR-COC' \
				AND BAPPSPECTABLE_VALUE.TABLE_NAME = 'SHIPPING ADDRESS' \
				AND BAPPSPECTABLE_VALUE.COLUMN_NAME = 'Address' \
				AND BAPPSPECTABLE_VALUE.REC_STATUS = 'A' \
			) A \
		) C \
		WHERE 1=1 \
			AND Z.SERV_PROV_CODE = C.SERV_PROV_CODE \
			AND Z.B1_PER_ID1 = C.B1_PER_ID1 \
			AND Z.B1_PER_ID2 = C.B1_PER_ID2 \
			AND Z.B1_PER_ID3 = C.B1_PER_ID3 \
			AND Z.ROW_INDEX = C.ROW_INDEX \
	)\
	";	

// Rename Address Line 1 to Address SQL (pCapId1, pCapId2, pCapId3)
vRenameAddressLine1SQL = "update BAPPSPECTABLE_VALUE Z\
	set COLUMN_NAME = 'Address' \
	where 1=1 \
	AND SERV_PROV_CODE = 'ABCC' \
	AND GROUP_NAME = 'TR-COC' \
	AND TABLE_NAME = 'SHIPPING ADDRESS' \
	AND COLUMN_NAME = 'Address Line 1' \
	AND EXISTS (SELECT 1 FROM \
		(SELECT DISTINCT A.SERV_PROV_CODE, A.B1_PER_ID1, A.B1_PER_ID2, A.B1_PER_ID3, A.ROW_INDEX \
		FROM (\
			SELECT \
				BAPPSPECTABLE_VALUE.SERV_PROV_CODE, \
				BAPPSPECTABLE_VALUE.B1_PER_ID1, \
				BAPPSPECTABLE_VALUE.B1_PER_ID2, \
				BAPPSPECTABLE_VALUE.B1_PER_ID3, \
				BAPPSPECTABLE_VALUE.ROW_INDEX \
			FROM BAPPSPECTABLE_VALUE \
			WHERE 1=1 \
				AND BAPPSPECTABLE_VALUE.SERV_PROV_CODE = 'ABCC' \
				AND BAPPSPECTABLE_VALUE.GROUP_NAME = 'TR-COC' \
				AND BAPPSPECTABLE_VALUE.TABLE_NAME = 'SHIPPING ADDRESS' \
				AND BAPPSPECTABLE_VALUE.COLUMN_NAME = 'Address Line 1' \
				AND BAPPSPECTABLE_VALUE.REC_STATUS = 'A' \
			) A \
		) B \
		WHERE 1=1 \
			AND Z.SERV_PROV_CODE = B.SERV_PROV_CODE \
			AND Z.B1_PER_ID1 = B.B1_PER_ID1 \
			AND Z.B1_PER_ID2 = B.B1_PER_ID2 \
			AND Z.B1_PER_ID3 = B.B1_PER_ID3 \
			AND Z.ROW_INDEX = B.ROW_INDEX \
	)\
	AND NOT EXISTS (SELECT 1 FROM \
		(SELECT DISTINCT A.SERV_PROV_CODE, A.B1_PER_ID1, A.B1_PER_ID2, A.B1_PER_ID3, A.ROW_INDEX \
		FROM (\
			SELECT \
				BAPPSPECTABLE_VALUE.SERV_PROV_CODE, \
				BAPPSPECTABLE_VALUE.B1_PER_ID1, \
				BAPPSPECTABLE_VALUE.B1_PER_ID2, \
				BAPPSPECTABLE_VALUE.B1_PER_ID3, \
				BAPPSPECTABLE_VALUE.ROW_INDEX \
			FROM BAPPSPECTABLE_VALUE \
			WHERE 1=1 \
				AND BAPPSPECTABLE_VALUE.SERV_PROV_CODE = 'ABCC' \
				AND BAPPSPECTABLE_VALUE.GROUP_NAME = 'TR-COC' \
				AND BAPPSPECTABLE_VALUE.TABLE_NAME = 'SHIPPING ADDRESS' \
				AND BAPPSPECTABLE_VALUE.COLUMN_NAME = 'Address' \
				AND BAPPSPECTABLE_VALUE.REC_STATUS = 'A' \
			) A \
		) C \
		WHERE 1=1 \
			AND Z.SERV_PROV_CODE = C.SERV_PROV_CODE \
			AND Z.B1_PER_ID1 = C.B1_PER_ID1 \
			AND Z.B1_PER_ID2 = C.B1_PER_ID2 \
			AND Z.B1_PER_ID3 = C.B1_PER_ID3 \
			AND Z.ROW_INDEX = C.ROW_INDEX \
	)\
	";

// Remove ASIT Row information SQL (pCapId1, pCapId2, pCapId3)
vRemoveASITRowInfoSQL = "DELETE FROM BAPPSPECTABLE_VALUE Z\
	WHERE 1=1 \
	AND SERV_PROV_CODE = 'ABCC' \
	AND GROUP_NAME = 'TR-COC' \
	AND TABLE_NAME = 'SHIPPING ADDRESS' \
	AND COLUMN_NAME IN ('Address Line 1', 'Address Line 2','Address Line 3') \
	AND EXISTS (SELECT 1 FROM \
		(SELECT DISTINCT A.SERV_PROV_CODE, A.B1_PER_ID1, A.B1_PER_ID2, A.B1_PER_ID3 \
		FROM (\
			SELECT \
				BAPPSPECTABLE_VALUE.SERV_PROV_CODE, \
				BAPPSPECTABLE_VALUE.B1_PER_ID1, \
				BAPPSPECTABLE_VALUE.B1_PER_ID2, \
				BAPPSPECTABLE_VALUE.B1_PER_ID3 \
			FROM BAPPSPECTABLE_VALUE \
			WHERE 1=1 \
				AND BAPPSPECTABLE_VALUE.SERV_PROV_CODE = 'ABCC' \
				AND BAPPSPECTABLE_VALUE.GROUP_NAME = 'TR-COC' \
				AND BAPPSPECTABLE_VALUE.TABLE_NAME = 'SHIPPING ADDRESS' \
				AND BAPPSPECTABLE_VALUE.COLUMN_NAME in ('Address Line 1', 'Address Line 2','Address Line 3') \
				AND BAPPSPECTABLE_VALUE.REC_STATUS = 'A' \
			) A \
		) B \
		WHERE 1=1 \
			AND Z.SERV_PROV_CODE = B.SERV_PROV_CODE \
			AND Z.B1_PER_ID1 = B.B1_PER_ID1 \
			AND Z.B1_PER_ID2 = B.B1_PER_ID2 \
			AND Z.B1_PER_ID3 = B.B1_PER_ID3 \
	)\
	";

// Remove ASIT information SQL (pCapId1, pCapId2, pCapId3)
vRemoveASITInfoSQL = "DELETE FROM BAPPSPECTABLE Z\
	WHERE 1=1 \
	AND SERV_PROV_CODE = 'ABCC' \
	AND GROUP_NAME = 'TR-COC' \
	AND TABLE_NAME = 'SHIPPING ADDRESS' \
	AND COLUMN_NAME IN ('Address Line 1', 'Address Line 2','Address Line 3') \
	AND EXISTS (SELECT 1 FROM \
		(SELECT DISTINCT A.SERV_PROV_CODE, A.B1_PER_ID1, A.B1_PER_ID2, A.B1_PER_ID3 \
		FROM (\
			SELECT \
				BAPPSPECTABLE.SERV_PROV_CODE, \
				BAPPSPECTABLE.B1_PER_ID1, \
				BAPPSPECTABLE.B1_PER_ID2, \
				BAPPSPECTABLE.B1_PER_ID3 \
			FROM BAPPSPECTABLE \
			WHERE 1=1 \
				AND BAPPSPECTABLE.SERV_PROV_CODE = 'ABCC' \
				AND BAPPSPECTABLE.GROUP_NAME = 'TR-COC' \
				AND BAPPSPECTABLE.TABLE_NAME = 'SHIPPING ADDRESS' \
				AND BAPPSPECTABLE.COLUMN_NAME in ('Address Line 1', 'Address Line 2','Address Line 3') \
				AND BAPPSPECTABLE.REC_STATUS = 'A' \
			) A \
		) B \
		WHERE 1=1 \
			AND Z.SERV_PROV_CODE = B.SERV_PROV_CODE \
			AND Z.B1_PER_ID1 = B.B1_PER_ID1 \
			AND Z.B1_PER_ID2 = B.B1_PER_ID2 \
			AND Z.B1_PER_ID3 = B.B1_PER_ID3 \
	)\
	";
	
// Create Address Field Info SQL
vCreateAddressFieldSQL = "INSERT INTO BAPPSPECTABLE (\
	SERV_PROV_CODE, \
	B1_PER_ID1, \
	B1_PER_ID2, \
	B1_PER_ID3, \
	GROUP_NAME, \
	TABLE_NAME, \
	COLUMN_NAME, \
	COLUMN_TYPE, \
	B1_ATTRIBUTE_VALUE, \
	MAX_LENGTH, \
	DISPLAY_LENGTH, \
	B1_ATTRIBUTE_VALUE_REQ_FLAG, \
	B1_DISPLAY_ORDER, \
	B1_TABLE_DISPLAY_ORDER, \
	REC_DATE, \
	REC_FUL_NAM, \
	REC_STATUS, \
	B1_REQ_FEE_CALC, \
	B1_SUPERVISOR_EDIT_ONLY_FLAG \
	) \
	SELECT DISTINCT\
		'ABCC', \
		ASIT.B1_PER_ID1, \
		ASIT.B1_PER_ID2, \
		ASIT.B1_PER_ID3, \
		'TR-COC', \
		'SHIPPING ADDRESS', \
		'Address', \
		'6', \
		'null', \
		'240', \
		'-1', \
		'Y', \
		'5', \
		'5', \
		SYSDATE, \
		'TIER2SUPPORT', \
		'A', \
		'N', \
		'N' \
	FROM BAPPSPECTABLE_VALUE ASIT \
	WHERE 1=1 \
	AND EXISTS (SELECT 1 FROM \
		(SELECT DISTINCT A.SERV_PROV_CODE, A.B1_PER_ID1, A.B1_PER_ID2, A.B1_PER_ID3 \
		FROM (\
			SELECT \
				BAPPSPECTABLE_VALUE.SERV_PROV_CODE, \
				BAPPSPECTABLE_VALUE.B1_PER_ID1, \
				BAPPSPECTABLE_VALUE.B1_PER_ID2, \
				BAPPSPECTABLE_VALUE.B1_PER_ID3 \
			FROM BAPPSPECTABLE_VALUE \
			WHERE 1=1 \
				AND BAPPSPECTABLE_VALUE.SERV_PROV_CODE = 'ABCC' \
				AND BAPPSPECTABLE_VALUE.GROUP_NAME = 'TR-COC' \
				AND BAPPSPECTABLE_VALUE.TABLE_NAME = 'SHIPPING ADDRESS' \
				AND BAPPSPECTABLE_VALUE.COLUMN_NAME = 'Address Line 1' \
				AND BAPPSPECTABLE_VALUE.REC_STATUS = 'A' \
			) A \
		) B \
		WHERE 1=1 \
			AND ASIT.SERV_PROV_CODE = B.SERV_PROV_CODE \
			AND ASIT.B1_PER_ID1 = B.B1_PER_ID1 \
			AND ASIT.B1_PER_ID2 = B.B1_PER_ID2 \
			AND ASIT.B1_PER_ID3 = B.B1_PER_ID3 \
	)\
	AND NOT EXISTS (SELECT 1 FROM \
		(SELECT DISTINCT A.SERV_PROV_CODE, A.B1_PER_ID1, A.B1_PER_ID2, A.B1_PER_ID3 \
		FROM (\
			SELECT \
				BAPPSPECTABLE.SERV_PROV_CODE, \
				BAPPSPECTABLE.B1_PER_ID1, \
				BAPPSPECTABLE.B1_PER_ID2, \
				BAPPSPECTABLE.B1_PER_ID3 \
			FROM BAPPSPECTABLE \
			WHERE 1=1 \
				AND BAPPSPECTABLE.SERV_PROV_CODE = 'ABCC' \
				AND BAPPSPECTABLE.GROUP_NAME = 'TR-COC' \
				AND BAPPSPECTABLE.TABLE_NAME = 'SHIPPING ADDRESS' \
				AND BAPPSPECTABLE.COLUMN_NAME = 'Address' \
				AND BAPPSPECTABLE.REC_STATUS = 'A' \
			) A \
		) C \
		WHERE 1=1 \
			AND ASIT.SERV_PROV_CODE = C.SERV_PROV_CODE \
			AND ASIT.B1_PER_ID1 = C.B1_PER_ID1 \
			AND ASIT.B1_PER_ID2 = C.B1_PER_ID2 \
			AND ASIT.B1_PER_ID3 = C.B1_PER_ID3 \
	)\
	";	

/* For Testing
var vSQL = "select * \
	from BAPPSPECTABLE ASIT\
	where 1=1 \
	AND ASIT.GROUP_NAME = 'TR-COC' \
	AND ASIT.TABLE_NAME = 'SHIPPING ADDRESS' \
	AND ASIT.COLUMN_NAME = 'Shipping from a Foreign Address' \
	AND ASIT.B1_PER_ID1 = '18CAP' \
	AND ASIT.B1_PER_ID2 = '00000' \
	AND ASIT.B1_PER_ID3 = '008GF' \
	";
	
//doSQL(vSQL);
*/
	
// Update Address Line 1
doSQL(vUpdateASITAddressLine1SQL);

// Update Address (if exists)
doSQL(vUpdateASITAddressSQL);

// Create Address field (if needed);
doSQL(vCreateAddressFieldSQL);

// Rename Address Line 1
doSQL(vRenameAddressLine1SQL);

// Delete ASIT Row Info
doSQL(vRemoveASITRowInfoSQL);

// Delte ASIT Info
doSQL(vRemoveASITInfoSQL);

////////////////////////////Update the foreign Flag/////////////////////////////////////////////////////
// Adds the BAPPSPECTABLE values
vCreateForeignAddressFieldSQL = "INSERT INTO BAPPSPECTABLE (\
	SERV_PROV_CODE, \
	B1_PER_ID1, \
	B1_PER_ID2, \
	B1_PER_ID3, \
	GROUP_NAME, \
	TABLE_NAME, \
	COLUMN_NAME, \
	COLUMN_TYPE, \
	B1_ATTRIBUTE_VALUE, \
	MAX_LENGTH, \
	DISPLAY_LENGTH, \
	B1_ATTRIBUTE_VALUE_REQ_FLAG, \
	B1_DISPLAY_ORDER, \
	B1_TABLE_DISPLAY_ORDER, \
	REC_DATE, \
	REC_FUL_NAM, \
	REC_STATUS, \
	B1_REQ_FEE_CALC, \
	B1_SUPERVISOR_EDIT_ONLY_FLAG \
	) \
	SELECT DISTINCT\
		'ABCC', \
		ASIT.B1_PER_ID1, \
		ASIT.B1_PER_ID2, \
		ASIT.B1_PER_ID3, \
		'TR-COC', \
		'SHIPPING ADDRESS', \
		'Shipping from a Foreign Address', \
		'3', \
		'null', \
		'240', \
		'-1', \
		'Y', \
		'1', \
		'5', \
		SYSDATE, \
		'TIER2SUPPORT', \
		'A', \
		'N', \
		'N' \
	FROM BAPPSPECTABLE_VALUE ASIT \
	WHERE 1=1 \
	AND EXISTS (SELECT 1 FROM \
		(SELECT DISTINCT A.SERV_PROV_CODE, A.B1_PER_ID1, A.B1_PER_ID2, A.B1_PER_ID3 \
		FROM (\
			SELECT \
				BAPPSPECTABLE_VALUE.SERV_PROV_CODE, \
				BAPPSPECTABLE_VALUE.B1_PER_ID1, \
				BAPPSPECTABLE_VALUE.B1_PER_ID2, \
				BAPPSPECTABLE_VALUE.B1_PER_ID3 \
			FROM BAPPSPECTABLE_VALUE \
			WHERE 1=1 \
				AND BAPPSPECTABLE_VALUE.SERV_PROV_CODE = 'ABCC' \
				AND BAPPSPECTABLE_VALUE.GROUP_NAME = 'TR-COC' \
				AND BAPPSPECTABLE_VALUE.TABLE_NAME = 'SHIPPING ADDRESS' \
				AND BAPPSPECTABLE_VALUE.COLUMN_NAME = 'Country' \
				AND BAPPSPECTABLE_VALUE.REC_STATUS = 'A' \
			) A \
		) B \
		WHERE 1=1 \
			AND ASIT.SERV_PROV_CODE = B.SERV_PROV_CODE \
			AND ASIT.B1_PER_ID1 = B.B1_PER_ID1 \
			AND ASIT.B1_PER_ID2 = B.B1_PER_ID2 \
			AND ASIT.B1_PER_ID3 = B.B1_PER_ID3 \
	)\
	AND NOT EXISTS (SELECT 1 FROM \
		(SELECT DISTINCT A.SERV_PROV_CODE, A.B1_PER_ID1, A.B1_PER_ID2, A.B1_PER_ID3 \
		FROM (\
			SELECT \
				BAPPSPECTABLE.SERV_PROV_CODE, \
				BAPPSPECTABLE.B1_PER_ID1, \
				BAPPSPECTABLE.B1_PER_ID2, \
				BAPPSPECTABLE.B1_PER_ID3 \
			FROM BAPPSPECTABLE \
			WHERE 1=1 \
				AND BAPPSPECTABLE.SERV_PROV_CODE = 'ABCC' \
				AND BAPPSPECTABLE.GROUP_NAME = 'TR-COC' \
				AND BAPPSPECTABLE.TABLE_NAME = 'SHIPPING ADDRESS' \
				AND BAPPSPECTABLE.COLUMN_NAME = 'Shipping from a Foreign Address' \
				AND BAPPSPECTABLE.REC_STATUS = 'A' \
			) A \
		) C \
		WHERE 1=1 \
			AND ASIT.SERV_PROV_CODE = C.SERV_PROV_CODE \
			AND ASIT.B1_PER_ID1 = C.B1_PER_ID1 \
			AND ASIT.B1_PER_ID2 = C.B1_PER_ID2 \
			AND ASIT.B1_PER_ID3 = C.B1_PER_ID3 \
	)\
	";	

// Adds the BAPPSPECTABLE_VALUE value
vCreateASITRowForeignAddressField = "INSERT INTO BAPPSPECTABLE_VALUE (\
	SERV_PROV_CODE, \
	B1_PER_ID1, \
	B1_PER_ID2, \
	B1_PER_ID3, \
	GROUP_NAME, \
	TABLE_NAME, \
	COLUMN_NAME, \
	COLUMN_INDEX, \
	ROW_INDEX, \
	ATTRIBUTE_VALUE, \
	REC_DATE, \
	REC_FUL_NAM, \
	REC_STATUS, \
	ATTRIBUTE_VALUE_READONLY \
	) \
	SELECT DISTINCT\
		'ABCC', \
		ASIT.B1_PER_ID1, \
		ASIT.B1_PER_ID2, \
		ASIT.B1_PER_ID3, \
		'TR-COC', \
		'SHIPPING ADDRESS', \
		'Shipping from a Foreign Address', \
		0,\
		ASIT.ROW_INDEX, \
		null, \
		SYSDATE, \
		'TIER2SUPPORT', \
		'A', \
		'N' \
	FROM BAPPSPECTABLE_VALUE ASIT \
	WHERE 1=1 \
	AND EXISTS (SELECT 1 FROM \
		(SELECT DISTINCT A.SERV_PROV_CODE, A.B1_PER_ID1, A.B1_PER_ID2, A.B1_PER_ID3, A.ROW_INDEX \
		FROM (\
			SELECT \
				BAPPSPECTABLE_VALUE.SERV_PROV_CODE, \
				BAPPSPECTABLE_VALUE.B1_PER_ID1, \
				BAPPSPECTABLE_VALUE.B1_PER_ID2, \
				BAPPSPECTABLE_VALUE.B1_PER_ID3, \
				BAPPSPECTABLE_VALUE.ROW_INDEX \
			FROM BAPPSPECTABLE_VALUE \
			WHERE 1=1 \
				AND BAPPSPECTABLE_VALUE.SERV_PROV_CODE = 'ABCC' \
				AND BAPPSPECTABLE_VALUE.GROUP_NAME = 'TR-COC' \
				AND BAPPSPECTABLE_VALUE.TABLE_NAME = 'SHIPPING ADDRESS' \
				AND BAPPSPECTABLE_VALUE.COLUMN_NAME = 'Country' \
				AND BAPPSPECTABLE_VALUE.REC_STATUS = 'A' \
			) A \
		) B \
		WHERE 1=1 \
			AND ASIT.SERV_PROV_CODE = B.SERV_PROV_CODE \
			AND ASIT.B1_PER_ID1 = B.B1_PER_ID1 \
			AND ASIT.B1_PER_ID2 = B.B1_PER_ID2 \
			AND ASIT.B1_PER_ID3 = B.B1_PER_ID3 \
			AND ASIT.ROW_INDEX = B.ROW_INDEX \
	)\
	AND NOT EXISTS (SELECT 1 FROM \
		(SELECT DISTINCT A.SERV_PROV_CODE, A.B1_PER_ID1, A.B1_PER_ID2, A.B1_PER_ID3, A.ROW_INDEX \
		FROM (\
			SELECT \
				BAPPSPECTABLE_VALUE.SERV_PROV_CODE, \
				BAPPSPECTABLE_VALUE.B1_PER_ID1, \
				BAPPSPECTABLE_VALUE.B1_PER_ID2, \
				BAPPSPECTABLE_VALUE.B1_PER_ID3, \
				BAPPSPECTABLE_VALUE.ROW_INDEX \
			FROM BAPPSPECTABLE_VALUE \
			WHERE 1=1 \
				AND BAPPSPECTABLE_VALUE.SERV_PROV_CODE = 'ABCC' \
				AND BAPPSPECTABLE_VALUE.GROUP_NAME = 'TR-COC' \
				AND BAPPSPECTABLE_VALUE.TABLE_NAME = 'SHIPPING ADDRESS' \
				AND BAPPSPECTABLE_VALUE.COLUMN_NAME = 'Shipping from a Foreign Address' \
				AND BAPPSPECTABLE_VALUE.REC_STATUS = 'A' \
			) A \
		) C \
		WHERE 1=1 \
			AND ASIT.SERV_PROV_CODE = C.SERV_PROV_CODE \
			AND ASIT.B1_PER_ID1 = C.B1_PER_ID1 \
			AND ASIT.B1_PER_ID2 = C.B1_PER_ID2 \
			AND ASIT.B1_PER_ID3 = C.B1_PER_ID3 \
			AND ASIT.ROW_INDEX = C.ROW_INDEX \
	)\
	";	

vUpdateASITForeignAddressYes = "UPDATE BAPPSPECTABLE_VALUE Z \
	SET Z.ATTRIBUTE_VALUE = 'Yes' \
	WHERE 1=1 \
	AND Z.SERV_PROV_CODE = 'ABCC' \
	AND Z.GROUP_NAME = 'TR-COC' \
	AND Z.TABLE_NAME = 'SHIPPING ADDRESS' \
	AND Z.COLUMN_NAME = 'Shipping from a Foreign Address' \
	AND Z.REC_STATUS = 'A' \
	AND EXISTS (SELECT 1 FROM \
	(SELECT DISTINCT A.SERV_PROV_CODE, A.B1_PER_ID1, A.B1_PER_ID2, A.B1_PER_ID3, A.ROW_INDEX \
	FROM (\
	SELECT \
	BAPPSPECTABLE_VALUE.SERV_PROV_CODE, \
	BAPPSPECTABLE_VALUE.B1_PER_ID1, \
	BAPPSPECTABLE_VALUE.B1_PER_ID2, \
	BAPPSPECTABLE_VALUE.B1_PER_ID3, \
	BAPPSPECTABLE_VALUE.ROW_INDEX \
	FROM BAPPSPECTABLE_VALUE \
	WHERE 1=1 \
	AND BAPPSPECTABLE_VALUE.SERV_PROV_CODE = 'ABCC' \
	AND BAPPSPECTABLE_VALUE.GROUP_NAME = 'TR-COC' \
	AND BAPPSPECTABLE_VALUE.TABLE_NAME = 'SHIPPING ADDRESS' \
	AND BAPPSPECTABLE_VALUE.COLUMN_NAME = 'Country' \
	AND BAPPSPECTABLE_VALUE.ATTRIBUTE_VALUE <> 'United States' \
	AND BAPPSPECTABLE_VALUE.ATTRIBUTE_VALUE IS NOT NULL\
	AND BAPPSPECTABLE_VALUE.REC_STATUS = 'A' \
	) A \
	) B \
	WHERE 1=1 \
	AND Z.SERV_PROV_CODE = B.SERV_PROV_CODE \
	AND Z.B1_PER_ID1 = B.B1_PER_ID1 \
	AND Z.B1_PER_ID2 = B.B1_PER_ID2 \
	AND Z.B1_PER_ID3 = B.B1_PER_ID3 \
	AND Z.ROW_INDEX = B.ROW_INDEX \
	)\
	";

vUpdateASITForeignAddressNo = "UPDATE BAPPSPECTABLE_VALUE Z \
	SET Z.ATTRIBUTE_VALUE = 'No' \
	WHERE 1=1 \
	AND Z.SERV_PROV_CODE = 'ABCC' \
	AND Z.GROUP_NAME = 'TR-COC' \
	AND Z.TABLE_NAME = 'SHIPPING ADDRESS' \
	AND Z.COLUMN_NAME = 'Shipping from a Foreign Address' \
	AND Z.REC_STATUS = 'A' \
	AND EXISTS (SELECT 1 FROM \
	(SELECT DISTINCT A.SERV_PROV_CODE, A.B1_PER_ID1, A.B1_PER_ID2, A.B1_PER_ID3, A.ROW_INDEX \
	FROM (\
	SELECT \
	BAPPSPECTABLE_VALUE.SERV_PROV_CODE, \
	BAPPSPECTABLE_VALUE.B1_PER_ID1, \
	BAPPSPECTABLE_VALUE.B1_PER_ID2, \
	BAPPSPECTABLE_VALUE.B1_PER_ID3, \
	BAPPSPECTABLE_VALUE.ROW_INDEX \
	FROM BAPPSPECTABLE_VALUE \
	WHERE 1=1 \
	AND BAPPSPECTABLE_VALUE.SERV_PROV_CODE = 'ABCC' \
	AND BAPPSPECTABLE_VALUE.GROUP_NAME = 'TR-COC' \
	AND BAPPSPECTABLE_VALUE.TABLE_NAME = 'SHIPPING ADDRESS' \
	AND BAPPSPECTABLE_VALUE.COLUMN_NAME = 'Country' \
	AND BAPPSPECTABLE_VALUE.ATTRIBUTE_VALUE = 'United States' \
	AND BAPPSPECTABLE_VALUE.REC_STATUS = 'A' \
	) A \
	) B \
	WHERE 1=1 \
	AND Z.SERV_PROV_CODE = B.SERV_PROV_CODE \
	AND Z.B1_PER_ID1 = B.B1_PER_ID1 \
	AND Z.B1_PER_ID2 = B.B1_PER_ID2 \
	AND Z.B1_PER_ID3 = B.B1_PER_ID3 \
	AND Z.ROW_INDEX = B.ROW_INDEX \
	)\
	";

doSQL(vCreateForeignAddressFieldSQL);
doSQL(vCreateASITRowForeignAddressField);
doSQL(vUpdateASITForeignAddressYes);
doSQL(vUpdateASITForeignAddressNo);

function doSQL(sql) {
	try {
		var array = [];
		var initialContext = aa.proxyInvoker.newInstance("javax.naming.InitialContext", null).getOutput();
		var ds = initialContext.lookup("java:/AA");
		var conn = ds.getConnection();
		var sStmt = conn.prepareStatement(sql);

		if (sql.toUpperCase().indexOf("SELECT") == 0) {
			aa.print("executing " + sql);
			var rSet = sStmt.executeQuery();
			while (rSet.next()) {
				var obj = {};
				var md = rSet.getMetaData();
				var columns = md.getColumnCount();
				for (i = 1; i <= columns; i++) {
					obj[md.getColumnName(i)] = String(rSet.getString(md.getColumnName(i)));
				}
				obj.count = rSet.getRow();
				array.push(obj)
			}
			rSet.close();
			aa.print("...returned " + array.length + " rows");
			aa.print(JSON.stringify(array));
			return array
		} else if (sql.toUpperCase().indexOf("UPDATE") == 0) {
			aa.print("executing update: " + sql);
			var rOut = sStmt.executeUpdate();
			aa.print(rOut + " rows updated");
			return array
		} else {
			aa.print("executing : " + sql);
			var rOut = sStmt.execute();
			aa.print(rOut);
			return array
		}
		sStmt.close();
		conn.close();
		return array
	} catch (err) {
		aa.print(err.message);
		return array
	}
}
